<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="kr.go.civilservice.complaint.mapper.ComplaintMapper">

	<!-- 민원 목록 조회 -->
	<select id="selectComplaintList" parameterType="map"
		resultType="kr.go.civilservice.complaint.model.ComplaintVO">
		SELECT
		c.*,
		m.NAME as memberName,
		CASE
		WHEN c.status = 'PENDING' THEN
		'접수대기'
		WHEN c.status = 'PROCESSING' THEN '처리중'
		WHEN c.status =
		'COMPLETED' THEN '처리완료'
		WHEN c.status = 'REJECTED' THEN '반려'
		END as
		statusName
		FROM COMPLAINT c
		JOIN MEMBER m ON c.MEMBER_ID = m.MEMBER_ID
		WHERE 1=1
		<if test="searchType != null and searchKeyword != null">
			<choose>
				<when test="searchType == 'title'">
					AND c.TITLE LIKE '%' || #{searchKeyword} || '%'
				</when>
				<when test="searchType == 'content'">
					AND c.CONTENT LIKE '%' || #{searchKeyword} || '%'
				</when>
				<when test="searchType == 'writer'">
					AND m.NAME LIKE '%' || #{searchKeyword} || '%'
				</when>
			</choose>
		</if>
		<if test="status != null">
			AND c.STATUS = #{status}
		</if>
		ORDER BY c.COMPLAINT_ID DESC
	</select>

	<!-- 민원 상세 조회 -->
	<select id="selectComplaintById" parameterType="long"
		resultType="kr.go.civilservice.complaint.model.ComplaintVO">
		SELECT
		c.*,
		m.NAME as memberName,
		CASE
		WHEN c.status =
		'PENDING' THEN '접수대기'
		WHEN c.status = 'PROCESSING' THEN '처리중'
		WHEN
		c.status = 'COMPLETED' THEN '처리완료'
		WHEN c.status = 'REJECTED' THEN '반려'
		END as statusName
		FROM COMPLAINT c
		JOIN MEMBER m ON c.MEMBER_ID =
		m.MEMBER_ID
		WHERE c.COMPLAINT_ID = #{complaintId}
	</select>

	<!-- 민원 등록 -->
	<insert id="insertComplaint"
		parameterType="kr.go.civilservice.complaint.model.ComplaintVO">
		<selectKey keyProperty="complaintId" order="BEFORE"
			resultType="long">
			SELECT SEQ_COMPLAINT_ID.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO COMPLAINT (
		COMPLAINT_ID, TITLE, CONTENT, MEMBER_ID,
		STATUS, CREATED_DATE, PRIVATE_INFO_YN
		) VALUES (
		#{complaintId},
		#{title}, #{content}, #{memberId},
		'PENDING', SYSDATE, #{privateInfoYn}
		)
	</insert>

	<!-- 민원 처리 이력 등록 -->
	<insert id="insertComplaintHistory" parameterType="map">
		INSERT INTO
		COMPLAINT_HISTORY (
		HISTORY_ID, COMPLAINT_ID, STATUS,
		HANDLER_ID,
		PROCESS_COMMENT, CREATED_DATE
		) VALUES (
		SEQ_HISTORY_ID.NEXTVAL,
		#{complaintId}, #{status},
		#{handlerId}, #{processComment}, SYSDATE
		)
	</insert>

	<!-- 민원 처리 이력 조회 -->
	<select id="selectComplaintHistories" parameterType="long"
		resultType="kr.go.civilservice.complaint.model.ComplaintHistoryVO">
		SELECT
		h.*,
		m.NAME as handlerName,
		CASE
		WHEN h.status =
		'PENDING' THEN '접수대기'
		WHEN h.status = 'PROCESSING' THEN '처리중'
		WHEN
		h.status = 'COMPLETED' THEN '처리완료'
		WHEN h.status = 'REJECTED' THEN '반려'
		END as statusName
		FROM COMPLAINT_HISTORY h
		LEFT JOIN MEMBER m ON
		h.HANDLER_ID = m.MEMBER_ID
		WHERE h.COMPLAINT_ID = #{complaintId}
		ORDER
		BY h.CREATED_DATE DESC
	</select>

	<!-- 상태별 통계 -->
	<select id="selectComplaintStatsByStatus" resultType="map">
		SELECT
		STATUS,
		CASE
		WHEN STATUS = 'PENDING' THEN '접수대기'
		WHEN STATUS = 'PROCESSING' THEN '처리중'
		WHEN STATUS = 'COMPLETED' THEN '처리완료'
		WHEN STATUS = 'REJECTED' THEN '반려'
		END as statusName,
		COUNT(*) as count
		FROM COMPLAINT
		GROUP BY STATUS
		ORDER BY STATUS
	</select>

	<!-- 월별 통계 -->
	<select id="selectComplaintStatsByMonth" resultType="map">
		SELECT
		TO_CHAR(CREATED_DATE, 'YYYY-MM') as month,
		COUNT(*) as count
		FROM COMPLAINT
		WHERE CREATED_DATE >= ADD_MONTHS(SYSDATE, -11)
		GROUP BY TO_CHAR(CREATED_DATE, 'YYYY-MM')
		ORDER BY month
	</select>

</mapper>